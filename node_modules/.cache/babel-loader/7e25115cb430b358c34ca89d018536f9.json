{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\ViewDeck\\\\DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api\";\nimport Breadcrumb from \"../Common/Breadcrumb\";\nimport CardDetailsList from \"./CardDetailsList\";\nimport DeckDescription from \"./DeckDescription\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeckView = props => {\n  _s();\n\n  const {\n    handleDeleteDeck\n  } = props;\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState(null);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDeck = async () => {\n      const data = await readDeck(deckId, abortController.signal);\n      setDeck(data);\n    };\n\n    loadDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (deck) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n        crumbs: [\"Home\", deck.name]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeckDescription, {\n        name: deck.name,\n        description: deck.description,\n        handleDeleteDeck: handleDeleteDeck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardDetailsList, {\n        cards: deck.cards,\n        setDeck: setDeck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(DeckView, \"DefFKKwQuBJCOxGfS65smDmcf5E=\", false, function () {\n  return [useParams];\n});\n\n_c = DeckView;\nexport default DeckView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["C:/Users/User/Thinkful/Project_Flashcards_Qualified_1/src/Layout/ViewDeck/DeckView.js"],"names":["React","useEffect","useState","useParams","readDeck","Breadcrumb","CardDetailsList","DeckDescription","DeckView","props","handleDeleteDeck","deckId","deck","setDeck","abortController","AbortController","loadDeck","data","signal","abort","name","description","cards"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAuBD,KAA7B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAaR,SAAS,EAA5B;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACO,MAAD,EAASG,eAAe,CAACI,MAAzB,CAA3B;AACAL,MAAAA,OAAO,CAACI,IAAD,CAAP;AACD,KAHD;;AAKAD,IAAAA,QAAQ;AAER,WAAO,MAAMF,eAAe,CAACK,KAAhB,EAAb;AACD,GAXQ,EAWN,CAACR,MAAD,CAXM,CAAT;;AAaA,MAAIC,IAAJ,EAAU;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE,CAAC,MAAD,EAASA,IAAI,CAACQ,IAAd;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AACE,QAAA,IAAI,EAAER,IAAI,CAACQ,IADb;AAEE,QAAA,WAAW,EAAER,IAAI,CAACS,WAFpB;AAGE,QAAA,gBAAgB,EAAEX;AAHpB;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEE,IAAI,CAACU,KAA7B;AAAoC,QAAA,OAAO,EAAET;AAA7C;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZD,MAYO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAjCD;;GAAML,Q;UAEeL,S;;;KAFfK,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api\";\r\nimport Breadcrumb from \"../Common/Breadcrumb\";\r\nimport CardDetailsList from \"./CardDetailsList\";\r\nimport DeckDescription from \"./DeckDescription\";\r\n\r\nconst DeckView = (props) => {\r\n  const { handleDeleteDeck } = props;\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    const loadDeck = async () => {\r\n      const data = await readDeck(deckId, abortController.signal);\r\n      setDeck(data);\r\n    };\r\n\r\n    loadDeck();\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n\r\n  if (deck) {\r\n    return (\r\n      <div className=\"mb-5\">\r\n        <Breadcrumb crumbs={[\"Home\", deck.name]} />\r\n        <DeckDescription\r\n          name={deck.name}\r\n          description={deck.description}\r\n          handleDeleteDeck={handleDeleteDeck}\r\n        />\r\n        <CardDetailsList cards={deck.cards} setDeck={setDeck}/>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n};\r\n\r\nexport default DeckView;"]},"metadata":{},"sourceType":"module"}