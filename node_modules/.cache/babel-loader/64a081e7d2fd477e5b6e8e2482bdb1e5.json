{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study\\\\StudyView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api\";\nimport Breadcrumb from \"../Common/Breadcrumb\";\nimport NotEnoughView from \"./NotEnoughView\";\nimport StudyCard from \"./StudyCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StudyView = props => {\n  _s();\n\n  const [deck, setDeck] = useState(null);\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDeck = async () => {\n      const data = await readDeck(deckId, abortController.signal);\n      setDeck(data);\n    };\n\n    loadDeck();\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (deck) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n        crumbs: [\"Home\", deck.name, \"Study\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Study: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), deck.cards.length > 2 ? /*#__PURE__*/_jsxDEV(StudyCard, {\n        cards: deck.cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(NotEnoughView, {\n        deck: deck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 69\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  } // } else if (deck && deck.cards.length <= 2) {\n  //   return <NotEnoughView deck={deck} />;\n\n};\n\n_s(StudyView, \"TQvZccdBazuJ5GSSkl3CRDh1Ao0=\", false, function () {\n  return [useParams];\n});\n\n_c = StudyView;\nexport default StudyView;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyView\");","map":{"version":3,"sources":["C:/Users/User/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Study/StudyView.js"],"names":["React","useEffect","useState","useParams","readDeck","Breadcrumb","NotEnoughView","StudyCard","StudyView","props","deck","setDeck","deckId","abortController","AbortController","loadDeck","data","signal","abort","name","cards","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAaT,SAAS,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACQ,MAAD,EAASC,eAAe,CAACI,MAAzB,CAA3B;AACAN,MAAAA,OAAO,CAACK,IAAD,CAAP;AACD,KAHD;;AAKAD,IAAAA,QAAQ;AAER,WAAO,MAAMF,eAAe,CAACK,KAAhB,EAAb;AACD,GAXQ,EAWN,CAACN,MAAD,CAXM,CAAT;;AAaA,MAAIF,IAAJ,EAAU;AACR,wBACE;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE,CAAC,MAAD,EAASA,IAAI,CAACS,IAAd,EAAoB,OAApB;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,8BAAYT,IAAI,CAACS,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGT,IAAI,CAACU,KAAL,CAAWC,MAAX,GAAoB,CAApB,gBAAwB,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEX,IAAI,CAACU;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAxB,gBAA2D,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEV;AAArB;AAAA;AAAA;AAAA;AAAA,cAH9D;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD,MAQO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GA3B0B,CA6B3B;AACA;;AACD,CA/BD;;GAAMF,S;UAEeL,S;;;KAFfK,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api\";\r\nimport Breadcrumb from \"../Common/Breadcrumb\";\r\n\r\nimport NotEnoughView from \"./NotEnoughView\";\r\nimport StudyCard from \"./StudyCard\";\r\n\r\nconst StudyView = (props) => {\r\n  const [deck, setDeck] = useState(null);\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    const loadDeck = async () => {\r\n      const data = await readDeck(deckId, abortController.signal);\r\n      setDeck(data);\r\n    };\r\n\r\n    loadDeck();\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId]);\r\n\r\n  if (deck) {\r\n    return (\r\n      <div>\r\n        <Breadcrumb crumbs={[\"Home\", deck.name, \"Study\"]} />\r\n        <h2>Study: {deck.name}</h2>\r\n        {deck.cards.length > 2 ? <StudyCard cards={deck.cards} /> : <NotEnoughView deck={deck} />}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  // } else if (deck && deck.cards.length <= 2) {\r\n  //   return <NotEnoughView deck={deck} />;\r\n};\r\n\r\nexport default StudyView;"]},"metadata":{},"sourceType":"module"}