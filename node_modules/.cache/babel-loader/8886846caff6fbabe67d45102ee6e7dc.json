{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Deck\\\\ListDecks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { listDecks, deleteDeck } from \"../../\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListDecks() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const output = await listDecks();\n        setDecks(output);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          // Ignore `AbortError`\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadData();\n  }, []);\n\n  const handleDelete = async ({\n    target\n  }) => {\n    const value = target.value;\n    const result = window.confirm(`Delete deck ID ${value}? You will not be able to recover it.`);\n\n    if (result) {\n      async function deleteData() {\n        try {\n          await deleteDeck(value);\n          const output = await listDecks();\n          setDecks(output);\n        } catch (error) {\n          if (error.name === \"AbortError\") {\n            // Ignore `AbortError`\n            console.log(\"Aborted\");\n          } else {\n            throw error;\n          }\n        }\n      }\n\n      deleteData();\n    }\n  }; //console.log(\"deck\", deck);\n\n\n  if (decks.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: decks.map(deck => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-10\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: deck.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", deck.cards.length, \" cards\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-4\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `decks/${deck.id}`,\n                  className: \"btn btn-secondary\",\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                  to: `decks/${deck.id}/study`,\n                  className: \"btn btn-primary\",\n                  children: \"Study\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-1\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  value: deck.id,\n                  onClick: handleDelete,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this);\n  }\n\n  return \"Please add a deck.\";\n}\n\n_s(ListDecks, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = ListDecks;\nexport default ListDecks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListDecks\");","map":{"version":3,"sources":["C:/Users/User/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Deck/ListDecks.js"],"names":["React","useState","useEffect","Link","listDecks","deleteDeck","ListDecks","decks","setDecks","loadData","output","error","name","console","log","handleDelete","target","value","result","window","confirm","deleteData","length","map","deck","cards","description","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {listDecks, deleteDeck} from \"../../\"\r\n\r\nfunction ListDecks(){\r\n    const [decks, setDecks] = useState([]);\r\n    useEffect(() => {\r\n        async function loadData() {\r\n           try {\r\n            const output = await listDecks();\r\n            setDecks(output);\r\n           \r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      loadData();\r\n    }, []);\r\n\r\n    \r\n    const handleDelete = async ({ target }) => {\r\n      const value=target.value;\r\n\r\n      const result = window.confirm(`Delete deck ID ${value}? You will not be able to recover it.`);\r\n      if (result) {\r\n        async function deleteData() {\r\n           try {\r\n            await deleteDeck(value);\r\n            const output = await listDecks();\r\n            setDecks(output);\r\n           \r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      deleteData();\r\n      }\r\n    };\r\n\r\n    //console.log(\"deck\", deck);\r\n    if (decks.length > 0){\r\n      \r\n        return (\r\n          <div>\r\n            {decks.map((deck) =>(\r\n              <div className=\"card\">\r\n              <div className=\"container\">\r\n                <div className=\"row card-header\">\r\n                  <div className=\"col-10\">\r\n                  <h4>{deck.name}</h4>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <p> {deck.cards.length} cards</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            \r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">{deck.description}</p>\r\n              <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                  <div className=\"col-4\">\r\n                    <Link to={`decks/${deck.id}`} className=\"btn btn-secondary\">View</Link> &nbsp;\r\n                    <Link to={`decks/${deck.id}/study`} className=\"btn btn-primary\">Study</Link>\r\n                  </div>\r\n                  <div className=\"col-1\">\r\n                    <button className=\"btn btn-danger\" value={deck.id} onClick={handleDelete}>Delete</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n            ))}\r\n            \r\n        </div>\r\n        );\r\n    }\r\n    return (\r\n        \"Please add a deck.\"\r\n    );\r\n}\r\nexport default ListDecks;"]},"metadata":{},"sourceType":"module"}