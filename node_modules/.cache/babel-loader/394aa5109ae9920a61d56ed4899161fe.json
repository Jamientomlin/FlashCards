{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Common\\\\CreateEditCardForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { createCard, updateCard } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateEditCardForm = ({\n  front = \"\",\n  back = \"\",\n  isEditing = false\n}) => {\n  _s();\n\n  const initialFormData = {\n    front: \"\",\n    back: \"\"\n  };\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const history = useHistory();\n  const [formData, setFormData] = useState({ ...initialFormData\n  });\n  useEffect(() => {\n    if (isEditing) {\n      setFormData(currentFormData => {\n        return { ...currentFormData,\n          front,\n          back\n        };\n      });\n    }\n  }, [back, front, isEditing]);\n\n  const handleSaveCard = async event => {\n    event.preventDefault();\n\n    if (isEditing) {\n      await updateCard({ ...formData,\n        id: Number(cardId),\n        deckId: Number(deckId)\n      });\n      setFormData({ ...initialFormData\n      });\n      history.push(`/decks/${deckId}`);\n    } else {\n      await createCard(deckId, { ...formData\n      });\n      setFormData({ ...initialFormData\n      });\n    }\n  };\n\n  const handleChange = event => {\n    const newData = { ...formData,\n      [event.target.name]: event.target.value\n    };\n    setFormData(newData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSaveCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"front\",\n        className: \"form-label\",\n        children: \"Front\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"front\",\n        name: \"front\",\n        \"aria-describedby\": \"frontFormInput\",\n        onChange: handleChange,\n        value: formData.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"back\",\n        className: \"form-label\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"back\",\n        name: \"back\",\n        \"aria-describedby\": \"frontFormInput\",\n        onChange: handleChange,\n        value: formData.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/decks/${deckId}`,\n      className: \"btn btn-secondary mr-2\",\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateEditCardForm, \"DO1d0utUkJEXkMFXFX4pi8uzWc4=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = CreateEditCardForm;\nexport default CreateEditCardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEditCardForm\");","map":{"version":3,"sources":["C:/Users/User/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Common/CreateEditCardForm.js"],"names":["React","useEffect","useState","Link","useParams","useHistory","createCard","updateCard","CreateEditCardForm","front","back","isEditing","initialFormData","deckId","cardId","history","formData","setFormData","currentFormData","handleSaveCard","event","preventDefault","id","Number","push","handleChange","newData","target","name","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { createCard, updateCard } from \"../../utils/api\";\r\n\r\nconst CreateEditCardForm = ({ front = \"\", back = \"\", isEditing = false }) => {\r\n  const initialFormData = {\r\n    front: \"\",\r\n    back: \"\",\r\n  };\r\n\r\n  const { deckId, cardId } = useParams();\r\n  const history = useHistory();\r\n  const [formData, setFormData] = useState({ ...initialFormData });\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      setFormData((currentFormData) => {\r\n        return {\r\n          ...currentFormData,\r\n          front,\r\n          back,\r\n        };\r\n      });\r\n    }\r\n  }, [back, front, isEditing]);\r\n\r\n  const handleSaveCard = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isEditing) {\r\n      await updateCard({ ...formData, id: Number(cardId), deckId: Number(deckId) });\r\n\r\n      setFormData({ ...initialFormData });\r\n\r\n      history.push(`/decks/${deckId}`);\r\n    } else {\r\n      await createCard(deckId, { ...formData });\r\n\r\n      setFormData({ ...initialFormData });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const newData = {\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n\r\n    setFormData(newData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSaveCard}>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"front\" className=\"form-label\">\r\n          Front\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"front\"\r\n          name=\"front\"\r\n          aria-describedby=\"frontFormInput\"\r\n          onChange={handleChange}\r\n          value={formData.front}\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"back\" className=\"form-label\">\r\n          Back\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"back\"\r\n          name=\"back\"\r\n          aria-describedby=\"frontFormInput\"\r\n          onChange={handleChange}\r\n          value={formData.back}\r\n        />\r\n      </div>\r\n\r\n      <Link to={`/decks/${deckId}`} className=\"btn btn-secondary mr-2\">\r\n        Done\r\n      </Link>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Save\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateEditCardForm;"]},"metadata":{},"sourceType":"module"}