{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { useParams } from \"react-router\";\n// import { readDeck } from \"../../utils/api\";\n// import Breadcrumb from \"../Common/Breadcrumb\";\n// import EditDeckForm from \"./EditDeckForm\";\n// const EditDeckView = (props) => {\n//   const [deck, setDeck] = useState(null);\n//   const { deckId } = useParams();\n//   useEffect(() => {\n//     const abortController = new AbortController();\n//     const loadDeck = async () => {\n//       const loadedDeck = await readDeck(deckId, abortController.signal);\n//       setDeck(loadedDeck);\n//     };\n//     loadDeck();\n//     return () => abortController.abort();\n//   }, [deckId]);\n//   if (deck) {\n//     return (\n//       <div>\n//         <Breadcrumb crumbs={[\"Home\", deck.name, \"Edit Deck\"]} />\n//         <h2>Edit Deck</h2>\n//         <EditDeckForm name={deck.name} description={deck.description} />\n//       </div>\n//     );\n//   } else {\n//     return <p>Loading...</p>;\n//   }\n// };\n// export default EditDeckView;","map":{"version":3,"sources":["C:/Users/User/Thinkful/Project_Flashcards_Qualified_1/src/Layout/EditDeck/EditDeckView.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useParams } from \"react-router\";\r\n// import { readDeck } from \"../../utils/api\";\r\n// import Breadcrumb from \"../Common/Breadcrumb\";\r\n// import EditDeckForm from \"./EditDeckForm\";\r\n\r\n// const EditDeckView = (props) => {\r\n//   const [deck, setDeck] = useState(null);\r\n//   const { deckId } = useParams();\r\n\r\n//   useEffect(() => {\r\n//     const abortController = new AbortController();\r\n\r\n//     const loadDeck = async () => {\r\n//       const loadedDeck = await readDeck(deckId, abortController.signal);\r\n//       setDeck(loadedDeck);\r\n//     };\r\n\r\n//     loadDeck();\r\n\r\n//     return () => abortController.abort();\r\n//   }, [deckId]);\r\n\r\n//   if (deck) {\r\n//     return (\r\n//       <div>\r\n//         <Breadcrumb crumbs={[\"Home\", deck.name, \"Edit Deck\"]} />\r\n//         <h2>Edit Deck</h2>\r\n//         <EditDeckForm name={deck.name} description={deck.description} />\r\n//       </div>\r\n//     );\r\n//   } else {\r\n//     return <p>Loading...</p>;\r\n//   }\r\n// };\r\n\r\n// export default EditDeckView;"]},"metadata":{},"sourceType":"module"}