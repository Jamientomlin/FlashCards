{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomeView from \"./Home/HomeView\";\nimport { listDecks, deleteDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  const location = useLocation();\n  const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDecks = async () => {\n      const data = await listDecks(abortController.signal);\n      setDecks(data);\n    };\n\n    loadDecks();\n    return () => {\n      abortController.abort();\n    };\n  }, [location]);\n\n  const handleDeleteDeck = async deckId => {\n    const result = window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\");\n\n    if (result) {\n      await deleteDeck(deckId, new AbortController().signal);\n      const data = await listDecks(new AbortController().signal);\n      setDecks(data);\n      history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(HomeView, {\n        decks: decks,\n        handleDeleteDeck: handleDeleteDeck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"tbbGAtl0yImlTwq5vGnkIZYnEs8=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/User/Thinkful/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useState","useEffect","useLocation","useHistory","Header","HomeView","listDecks","deleteDeck","Layout","decks","setDecks","location","history","abortController","AbortController","loadDecks","data","signal","abort","handleDeleteDeck","deckId","result","window","confirm","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,IAAI,GAAG,MAAMV,SAAS,CAACO,eAAe,CAACI,MAAjB,CAA5B;AACAP,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,KAHD;;AAKAD,IAAAA,SAAS;AAET,WAAO,MAAM;AACXF,MAAAA,eAAe,CAACK,KAAhB;AACD,KAFD;AAGD,GAbQ,EAaN,CAACP,QAAD,CAbM,CAAT;;AAeA,QAAMQ,gBAAgB,GAAG,MAAOC,MAAP,IAAkB;AACzC,UAAMC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAe,0DAAf,CAAf;;AACA,QAAIF,MAAJ,EAAY;AACV,YAAMd,UAAU,CAACa,MAAD,EAAS,IAAIN,eAAJ,GAAsBG,MAA/B,CAAhB;AACA,YAAMD,IAAI,GAAG,MAAMV,SAAS,CAAC,IAAIQ,eAAJ,GAAsBG,MAAvB,CAA5B;AACAP,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACAJ,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACD;AACF,GARD;;AAUA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEf,KAAjB;AAAwB,QAAA,gBAAgB,EAAEU;AAA1C;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvCQX,M;UAEUN,W,EACDC,U;;;KAHTK,M;AAyCT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomeView from \"./Home/HomeView\";\nimport { listDecks, deleteDeck } from \"../utils/api/index\";\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDecks = async () => {\n      const data = await listDecks(abortController.signal);\n      setDecks(data);\n    };\n\n    loadDecks();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [location]);\n\n  const handleDeleteDeck = async (deckId) => {\n    const result = window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\");\n    if (result) {\n      await deleteDeck(deckId, new AbortController().signal);\n      const data = await listDecks(new AbortController().signal);\n      setDecks(data);\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n        <HomeView decks={decks} handleDeleteDeck={handleDeleteDeck} />\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}