{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { readDeck } from \"../../utils/api\";\n// import Breadcrumb from \"../Common/Breadcrumb\";\n// import CardDetailsList from \"./CardDetailsList\";\n// import DeckDescription from \"./DeckDescription\";\n// const DeckView = (props) => {\n//   const { handleDeleteDeck } = props;\n//   const { deckId } = useParams();\n//   const [deck, setDeck] = useState(null);\n//   useEffect(() => {\n//     const abortController = new AbortController();\n//     const loadDeck = async () => {\n//       const data = await readDeck(deckId, abortController.signal);\n//       setDeck(data);\n//     };\n//     loadDeck();\n//     return () => abortController.abort();\n//   }, [deckId]);\n//   if (deck) {\n//     return (\n//       <div className=\"mb-5\">\n//         <Breadcrumb crumbs={[\"Home\", deck.name]} />\n//         <DeckDescription\n//           name={deck.name}\n//           description={deck.description}\n//           handleDeleteDeck={handleDeleteDeck}\n//         />\n//         <CardDetailsList cards={deck.cards} setDeck={setDeck}/>\n//       </div>\n//     );\n//   } else {\n//     return <p>Loading...</p>;\n//   }\n// };\n// export default DeckView;","map":{"version":3,"sources":["C:/Users/User/Thinkful/Project_Flashcards_Qualified_1/src/Layout/ViewDeck/DeckView.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import { readDeck } from \"../../utils/api\";\r\n// import Breadcrumb from \"../Common/Breadcrumb\";\r\n// import CardDetailsList from \"./CardDetailsList\";\r\n// import DeckDescription from \"./DeckDescription\";\r\n\r\n// const DeckView = (props) => {\r\n//   const { handleDeleteDeck } = props;\r\n//   const { deckId } = useParams();\r\n//   const [deck, setDeck] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const abortController = new AbortController();\r\n\r\n//     const loadDeck = async () => {\r\n//       const data = await readDeck(deckId, abortController.signal);\r\n//       setDeck(data);\r\n//     };\r\n\r\n//     loadDeck();\r\n\r\n//     return () => abortController.abort();\r\n//   }, [deckId]);\r\n\r\n//   if (deck) {\r\n//     return (\r\n//       <div className=\"mb-5\">\r\n//         <Breadcrumb crumbs={[\"Home\", deck.name]} />\r\n//         <DeckDescription\r\n//           name={deck.name}\r\n//           description={deck.description}\r\n//           handleDeleteDeck={handleDeleteDeck}\r\n//         />\r\n//         <CardDetailsList cards={deck.cards} setDeck={setDeck}/>\r\n//       </div>\r\n//     );\r\n//   } else {\r\n//     return <p>Loading...</p>;\r\n//   }\r\n// };\r\n\r\n// export default DeckView;"]},"metadata":{},"sourceType":"module"}