{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\EditCard\\\\EditCardView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { readDeck } from \"../../utils/api\";\nimport Breadcrumb from \"../Common/Breadcrumb\";\nimport CreateEditCardForm from '../Common/CreateEditCardForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCardView() {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const cardId = params.cardId;\n  const [deck, setDeck] = useState({});\n  const [card, setCard] = useState({});\n  useEffect(() => {\n    setDeck({});\n\n    async function loadData() {\n      try {\n        const dataFromAPI = await readDeck(deckId);\n        setDeck(dataFromAPI);\n        const datafromApie2 = await readCard(cardId);\n        setCard(datafromApie2);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          // Ignore `AbortError`\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadData();\n  }, [deckId, cardId]);\n\n  const handleChange = ({\n    target\n  }) => {\n    const value = target.value;\n    setCard({ ...card,\n      [target.name]: value\n    });\n  };\n\n  const history = useHistory();\n\n  const handleSubmit = event => {\n    let output = [];\n    event.preventDefault();\n    console.log(\"Submitted:\", card);\n\n    async function updateData() {\n      try {\n        const dataFromAPI = await updateCard(card);\n        history.push(`/decks/${deckId}`);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          // Ignore `AbortError`\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    updateData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      crumbs: [\"Home\", `Deck ${deck.name}`, `Edit Card ${cardId}`]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CreateEditCardForm, {\n      front: card.front,\n      back: card.back,\n      isEditing: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditCardView, \"BeYiqgZdiQ9euYZZrmXui1MHta4=\", true, function () {\n  return [useParams];\n});\n\n_c = EditCardView;\n;\nexport default EditCardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCardView\");","map":{"version":3,"sources":["C:/Users/User/Thinkful/Project_Flashcards_Qualified_1/src/Layout/EditCard/EditCardView.js"],"names":["React","useEffect","useState","useParams","readDeck","Breadcrumb","CreateEditCardForm","EditCardView","params","deckId","cardId","deck","setDeck","card","setCard","loadData","dataFromAPI","datafromApie2","readCard","error","name","console","log","handleChange","target","value","history","useHistory","handleSubmit","event","output","preventDefault","updateData","updateCard","push","front","back"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { readDeck } from \"../../utils/api\";\r\nimport Breadcrumb from \"../Common/Breadcrumb\";\r\nimport CreateEditCardForm from '../Common/CreateEditCardForm'\r\n\r\nfunction EditCardView(){\r\nconst params = useParams();\r\nconst deckId = params.deckId;\r\nconst cardId = params.cardId;\r\nconst [deck, setDeck] = useState({});\r\nconst [card, setCard] = useState({});\r\nuseEffect(() => {\r\n    setDeck( {} );\r\n    async function loadData() {\r\n       try {\r\n       const dataFromAPI = await readDeck(deckId);\r\n       setDeck(dataFromAPI);\r\n       const datafromApie2 = await readCard(cardId);\r\n       setCard(datafromApie2);              \r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          // Ignore `AbortError`\r\n          console.log(\"Aborted\");\r\n      } else {\r\n          throw error;\r\n      }\r\n    }\r\n  }\r\n  loadData();\r\n}, [deckId, cardId]);\r\n\r\n\r\nconst handleChange = ({ target }) => {\r\n    const value = target.value;\r\n   setCard({\r\n   ...card,\r\n   [target.name]: value,\r\n });\r\n};\r\nconst history = useHistory();\r\nconst handleSubmit = (event) => {\r\n    let output = [];\r\n    event.preventDefault();\r\n    console.log(\"Submitted:\", card);\r\n    async function updateData() {\r\n       try {\r\n       const dataFromAPI = await updateCard(card);\r\n\r\n       history.push(`/decks/${deckId}`);\r\n      } catch (error) {\r\n        if (error.name === \"AbortError\") {\r\n          // Ignore `AbortError`\r\n          console.log(\"Aborted\");\r\n      } else {\r\n          throw error;\r\n      }\r\n    }\r\n  }\r\n  updateData(); \r\n  };\r\n    return (\r\n      <div>\r\n        <Breadcrumb crumbs={[\"Home\", `Deck ${deck.name}`, `Edit Card ${cardId}`]} />\r\n        <h2>Edit Card</h2>\r\n        <CreateEditCardForm front={card.front} back={card.back} isEditing={true} />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default EditCardView"]},"metadata":{},"sourceType":"module"}