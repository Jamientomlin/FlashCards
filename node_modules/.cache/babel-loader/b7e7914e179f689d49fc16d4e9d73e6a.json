{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../../\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const [front, setFront] = useState(true);\n  const [cardNumber, setCardNumber] = useState(0);\n  const [cards, setCards] = useState({});\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    setCards({});\n\n    async function loadData() {\n      try {\n        const dataFromAPI = await readDeck(deckId);\n        setDeck(dataFromAPI);\n        setCards(dataFromAPI.cards);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          // Ignore `AbortError`\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadData();\n  }, [deckId]);\n\n  function flipCard() {\n    setFront(!front);\n  }\n\n  const history = useHistory();\n\n  function nextCard() {\n    if (cardNumber + 1 < cards.length) {\n      setCardNumber(cardNumber + 1);\n      setFront(true);\n    } else {\n      const result = window.confirm(`Restart cards?\n            \n            Click 'cancel' to return to the home page.`);\n\n      if (result) {\n        setCardNumber(0);\n        setFront(true);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n\n  function Breadcrumb() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 65\n            }, this)\n          }, \"0\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deckId}`,\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 65\n            }, this)\n          }, \"1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            children: \"Study\"\n          }, \"2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this);\n  }\n\n  if (cards.length > 2) {\n    console.log(cards[0].front);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Study: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: [\"Card \", cardNumber + 1, \" of \", cards.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: front ? `${cards[cardNumber].front}` : `${cards[cardNumber].back}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: flipCard,\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), \" \\xA0\", front ? \" \" : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: nextCard,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Study: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: \"Not Enough Cards.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [\"You need at least 3 cards to study. There are \", cards.length, \" cards in this deck.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}/cards/new`,\n            className: \"btn btn-primary\",\n            children: \"Add Cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Study, \"o9wRkx3JbPLbvUCm2O2gfwCJw2A=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["C:/Users/User/Thinkful/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","readDeck","Study","params","deckId","front","setFront","cardNumber","setCardNumber","cards","setCards","deck","setDeck","loadData","dataFromAPI","error","name","console","log","flipCard","history","nextCard","length","result","window","confirm","push","Breadcrumb","back"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {readDeck} from \"../../\"\r\n\r\nfunction Study(){\r\n    const params = useParams();\r\n    const deckId = params.deckId\r\n    const [front, setFront] = useState(true);\r\n    const [cardNumber, setCardNumber] = useState(0);\r\n    const [cards, setCards] = useState({});\r\n    const [deck, setDeck] = useState({});\r\n    useEffect(() => {\r\n        setCards( {} );\r\n        async function loadData() {\r\n           try {\r\n            const dataFromAPI = await readDeck(deckId);\r\n            setDeck(dataFromAPI);\r\n            setCards(dataFromAPI.cards);\r\n           \r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n            }\r\n        }\r\n      }\r\n      loadData();\r\n    }, [deckId]);\r\n\r\n    function flipCard(){\r\n        setFront(!front);\r\n        \r\n    }\r\n    const history = useHistory();\r\n    function nextCard(){\r\n        if (cardNumber + 1 < cards.length){\r\n            setCardNumber(cardNumber + 1);\r\n            setFront(true);\r\n        } else {\r\n            const result = window.confirm(`Restart cards?\r\n            \r\n            Click 'cancel' to return to the home page.`);\r\n      if (result) {\r\n        setCardNumber(0);\r\n        setFront(true);\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n        \r\n        }\r\n    }\r\n\r\n    function Breadcrumb(){\r\n        return(\r\n<           div className=\"navigation\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\" key=\"0\"><Link to=\"/\">Home</Link></li>\r\n                        <li className=\"breadcrumb-item\" key=\"1\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"2\">Study</li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n    );\r\n    }\r\n    if (cards.length > 2){\r\n        console.log(cards[0].front);\r\n        return (\r\n            <div>\r\n                <Breadcrumb />\r\n                <h2>Study: {deck.name}</h2>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Card {cardNumber + 1} of {cards.length}</h5>\r\n                        <p className=\"card-text\">{(front) ? `${cards[cardNumber].front}` : `${cards[cardNumber].back}`}</p>\r\n                        <button className=\"btn btn-secondary\" onClick={flipCard}>Flip</button> &nbsp;\r\n                        {(front) ? \" \" : <button className=\"btn btn-primary\" onClick={nextCard}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Breadcrumb />\r\n                <h2>Study: {deck.name}</h2>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Not Enough Cards.</h5>\r\n                        <p className=\"card-text\">You need at least 3 cards to study. There are {cards.length} cards in this deck.</p>\r\n                        <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}