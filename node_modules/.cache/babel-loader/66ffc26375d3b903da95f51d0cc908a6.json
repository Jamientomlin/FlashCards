{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Thinkful\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\EditCard\\\\EditCardView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { readDeck } from \"../../utils/api\";\nimport Breadcrumb from \"../Common/Breadcrumb\";\nimport CreateEditCard from '../Common/CreateEditCardForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCardView = props => {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [deck, setDeck] = useState(null);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadDeck = async () => {\n      const loadedDeck = await readDeck(deckId, abortController.signal);\n      setDeck(loadedDeck);\n    };\n\n    loadDeck();\n    return () => abortController.abort();\n  }, [deckId, cardId]);\n\n  if (deck) {\n    const card = deck.cards.find(card => `${card.id}` === cardId);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n        crumbs: [\"Home\", `Deck ${deck.name}`, `Edit Card ${cardId}`]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateEditCardForm, {\n        front: card.front,\n        back: card.back,\n        isEditing: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(EditCardView, \"zR29WxHbKS2UCCMfJWG9nSPw/10=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCardView;\nexport default EditCardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCardView\");","map":{"version":3,"sources":["C:/Users/User/Thinkful/Project_Flashcards_Qualified_1/src/Layout/EditCard/EditCardView.js"],"names":["React","useEffect","useState","useParams","readDeck","Breadcrumb","CreateEditCard","EditCardView","props","deckId","cardId","deck","setDeck","abortController","AbortController","loadDeck","loadedDeck","signal","abort","card","cards","find","id","name","front","back"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBP,SAAS,EAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAMC,UAAU,GAAG,MAAMZ,QAAQ,CAACK,MAAD,EAASI,eAAe,CAACI,MAAzB,CAAjC;AACAL,MAAAA,OAAO,CAACI,UAAD,CAAP;AACD,KAHD;;AAKAD,IAAAA,QAAQ;AAER,WAAO,MAAMF,eAAe,CAACK,KAAhB,EAAb;AACD,GAXQ,EAWN,CAACT,MAAD,EAASC,MAAT,CAXM,CAAT;;AAaA,MAAIC,IAAJ,EAAU;AACR,UAAMQ,IAAI,GAAGR,IAAI,CAACS,KAAL,CAAWC,IAAX,CAAiBF,IAAD,IAAW,GAAEA,IAAI,CAACG,EAAG,EAAX,KAAiBZ,MAA3C,CAAb;AAEA,wBACE;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE,CAAC,MAAD,EAAU,QAAOC,IAAI,CAACY,IAAK,EAA3B,EAA+B,aAAYb,MAAO,EAAlD;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,kBAAD;AAAoB,QAAA,KAAK,EAAES,IAAI,CAACK,KAAhC;AAAuC,QAAA,IAAI,EAAEL,IAAI,CAACM,IAAlD;AAAwD,QAAA,SAAS,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GAVD,MAUO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CA9BD;;GAAMlB,Y;UACuBJ,S;;;KADvBI,Y;AAgCN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { readDeck } from \"../../utils/api\";\r\nimport Breadcrumb from \"../Common/Breadcrumb\";\r\nimport CreateEditCard from '../Common/CreateEditCardForm'\r\n\r\nconst EditCardView = (props) => {\r\n  const { deckId, cardId } = useParams();\r\n  const [deck, setDeck] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    const loadDeck = async () => {\r\n      const loadedDeck = await readDeck(deckId, abortController.signal);\r\n      setDeck(loadedDeck);\r\n    };\r\n\r\n    loadDeck();\r\n\r\n    return () => abortController.abort();\r\n  }, [deckId, cardId]);\r\n\r\n  if (deck) {\r\n    const card = deck.cards.find((card) => `${card.id}` === cardId);\r\n\r\n    return (\r\n      <div>\r\n        <Breadcrumb crumbs={[\"Home\", `Deck ${deck.name}`, `Edit Card ${cardId}`]} />\r\n        <h2>Edit Card</h2>\r\n        <CreateEditCardForm front={card.front} back={card.back} isEditing={true} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <p>Loading...</p>;\r\n  }\r\n};\r\n\r\nexport default EditCardView;"]},"metadata":{},"sourceType":"module"}