{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","utils/api/index.js","Layout/Deck/ListDecks.js","Layout/Home.js","Layout/Study.js","Layout/Deck/Deck.js","Layout/Deck/DeckForm.js","Layout/Deck/CreateDeck.js","Layout/Deck/EditDeck.js","Layout/CardFiles/CardForm.js","Layout/CardFiles/CardCreate.js","Layout/CardFiles/CardEdit.js","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","a","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updateDeck","updatedDeck","id","deleteDeck","listCards","createCard","card","Number","readCard","cardId","updateCard","updatedCard","deleteCard","append","ListDecks","useState","decks","setDecks","useEffect","output","log","loadData","handleDelete","target","value","window","confirm","deleteData","length","map","description","to","onClick","Home","Study","useParams","front","setFront","cardNumber","setCardNumber","setCards","setDeck","dataFromAPI","history","useHistory","Breadcrumb","aria-label","aria-current","back","push","Deck","handleDeckDelete","handleCardDelete","dataFromAPI2","DeckForm","formData","handleChange","type","onChange","style","width","rows","CreateDeck","setFormData","onSubmit","event","preventDefault","updateData","DeckEdit","CardForm","CardCreate","params","initialFormState","CardEdit","setCard","datafromApie2","Layout","exact","path","EditDeck","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9139e311.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {listDecks, deleteDeck} from \"../../utils/api/index\"\r\n\r\nfunction ListDecks(){\r\n    const [decks, setDecks] = useState([]);\r\n    useEffect(() => {\r\n        async function loadData() {\r\n           try {\r\n            const output = await listDecks();\r\n            setDecks(output);\r\n           \r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      loadData();\r\n    }, []);\r\n\r\n    \r\n    const handleDelete = async ({ target }) => {\r\n      const value=target.value;\r\n\r\n      const result = window.confirm(`Delete deck ID ${value}? You will not be able to recover it.`);\r\n      if (result) {\r\n        async function deleteData() {\r\n           try {\r\n            await deleteDeck(value);\r\n            const output = await listDecks();\r\n            setDecks(output);\r\n           \r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      deleteData();\r\n      }\r\n    };\r\n\r\n    //console.log(\"deck\", deck);\r\n    if (decks.length > 0){\r\n      \r\n        return (\r\n          <div>\r\n            {decks.map((deck) =>(\r\n              <div className=\"card\">\r\n              <div className=\"container\">\r\n                <div className=\"row card-header\">\r\n                  <div className=\"col-10\">\r\n                  <h4>{deck.name}</h4>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <p> {deck.cards.length} cards</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            \r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">{deck.description}</p>\r\n              <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                  <div className=\"col-4\">\r\n                    <Link to={`decks/${deck.id}`} className=\"btn btn-secondary\">View</Link> &nbsp;\r\n                    <Link to={`decks/${deck.id}/study`} className=\"btn btn-primary\">Study</Link>\r\n                  </div>\r\n                  <div className=\"col-1\">\r\n                    <button className=\"btn btn-danger\" value={deck.id} onClick={handleDelete}>Delete</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n            ))}\r\n            \r\n        </div>\r\n        );\r\n    }\r\n    return (\r\n        \"Please add a deck.\"\r\n    );\r\n}\r\nexport default ListDecks;","import React from \"react\";\r\nimport ListDecks from \"./Deck/ListDecks\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home(){\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to=\"/decks/new\" className=\"btn btn-secondary\">Create Deck</Link>\r\n            </div>\r\n            <br />\r\n            <ListDecks />\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","import React, {useState, useEffect} from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {readDeck} from \"../utils/api/index\"\r\n\r\nfunction Study(){\r\n    const params = useParams();\r\n    const deckId = params.deckId\r\n    const [front, setFront] = useState(true);\r\n    const [cardNumber, setCardNumber] = useState(0);\r\n    const [cards, setCards] = useState({});\r\n    const [deck, setDeck] = useState({});\r\n    useEffect(() => {\r\n        setCards( {} );\r\n        async function loadData() {\r\n           try {\r\n            const dataFromAPI = await readDeck(deckId);\r\n            setDeck(dataFromAPI);\r\n            setCards(dataFromAPI.cards);\r\n           \r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n            }\r\n        }\r\n      }\r\n      loadData();\r\n    }, [deckId]);\r\n\r\n    function flipCard(){\r\n        setFront(!front);\r\n        \r\n    }\r\n    const history = useHistory();\r\n    function nextCard(){\r\n        if (cardNumber + 1 < cards.length){\r\n            setCardNumber(cardNumber + 1);\r\n            setFront(true);\r\n        } else {\r\n            const result = window.confirm(`Restart cards?\r\n            \r\n            Click 'cancel' to return to the home page.`);\r\n      if (result) {\r\n        setCardNumber(0);\r\n        setFront(true);\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n        \r\n        }\r\n    }\r\n\r\n    function Breadcrumb(){\r\n        return(\r\n<           div className=\"navigation\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\" key=\"0\"><Link to=\"/\">Home</Link></li>\r\n                        <li className=\"breadcrumb-item\" key=\"1\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"2\">Study</li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n    );\r\n    }\r\n    if (cards.length > 2){\r\n        console.log(cards[0].front);\r\n        return (\r\n            <div>\r\n                <Breadcrumb />\r\n                <h2>Study: {deck.name}</h2>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Card {cardNumber + 1} of {cards.length}</h5>\r\n                        <p className=\"card-text\">{(front) ? `${cards[cardNumber].front}` : `${cards[cardNumber].back}`}</p>\r\n                        <button className=\"btn btn-secondary\" onClick={flipCard}>Flip</button> &nbsp;\r\n                        {(front) ? \" \" : <button className=\"btn btn-primary\" onClick={nextCard}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Breadcrumb />\r\n                <h2>Study: {deck.name}</h2>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Not Enough Cards.</h5>\r\n                        <p className=\"card-text\">You need at least 3 cards to study. There are {cards.length} cards in this deck.</p>\r\n                        <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Study;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {readDeck, deleteDeck, deleteCard, listCards} from \"../../utils/api/index\"\r\n\r\nfunction Deck(){\r\n    const [deck, setDeck] = useState({});\r\n    const [cards, setCards] = useState({});\r\n    const params = useParams();\r\n    const deckId = params.deckId\r\n    //console.log(deckId);\r\n    useEffect(() => {\r\n        setCards( {} );\r\n        async function loadData() {\r\n           try {\r\n            const dataFromAPI = await readDeck(deckId);\r\n            console.log(dataFromAPI);\r\n            setDeck(dataFromAPI);\r\n            setCards(dataFromAPI.cards);\r\n           \r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      loadData();\r\n    }, [deckId]);\r\n\r\n    const history = useHistory();\r\n    const handleDeckDelete = async () => {  \r\n        const result = window.confirm(`Delete deck ID ${deckId}? You will not be able to recover it.`);\r\n        if (result) {\r\n          async function deleteData() {\r\n            try {\r\n                await deleteDeck(deckId);\r\n                history.push(\"/\");\r\n             \r\n            } catch (error) {\r\n              if (error.name === \"AbortError\") {\r\n                // Ignore `AbortError`\r\n                console.log(\"Aborted\");\r\n            } else {\r\n                throw error;\r\n            }\r\n          }\r\n        }\r\n        deleteData();\r\n        }\r\n      };\r\n      const handleCardDelete = async ({ target }) => {\r\n        const value=target.value;\r\n  \r\n        const result = window.confirm(`Delete card ID ${value}? You will not be able to recover it.`);\r\n        if (result) {\r\n          async function deleteData() {\r\n             try {\r\n             await deleteCard(value);\r\n            const dataFromAPI2 = await listCards(deckId);\r\n            console.log(deckId, dataFromAPI2);\r\n            setCards(dataFromAPI2);\r\n             \r\n            } catch (error) {\r\n              if (error.name === \"AbortError\") {\r\n                // Ignore `AbortError`\r\n                console.log(\"Aborted\");\r\n            } else {\r\n                throw error;\r\n            }\r\n          }\r\n        }\r\n        deleteData();  \r\n        }\r\n      };  \r\n      \r\n    if (cards.length > 0){\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\" key=\"0\"><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"1\">{deck.name}</li>\r\n                </ol>\r\n            </nav>\r\n            <h3>{deck.name}</h3>\r\n            <p>{deck.description}</p>\r\n            <div className=\"row justify-content-between\">\r\n                <div className=\"col-8\">\r\n                    <Link to={`/decks/${deckId}/edit`} className=\"btn btn-secondary\">Edit</Link> &nbsp;\r\n                    <Link to={`/decks/${deckId}/study`} className=\"btn btn-primary\">Study</Link> &nbsp;\r\n                    <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <button onClick={handleDeckDelete} className=\"btn btn-danger\">Delete</button>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <heading>\r\n                <h2>Cards</h2>\r\n            </heading>\r\n            <br />\r\n            {cards.map((card) => (\r\n            \r\n            <div className=\"card\">                \r\n                <div className=\"card-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-start\">\r\n                            <div className=\"col-6\">\r\n                                {card.front}\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                {card.back}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-9\">\r\n                                \r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <Link to={`/decks/${deckId}/cards/${card.id}/edit`} className=\"btn btn-secondary\">Edit</Link> &nbsp;\r\n                                <button onClick={handleCardDelete} value={card.id} className=\"btn btn-danger\">Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n            \r\n            ))}\r\n        </div>\r\n    );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" key=\"0\"><Link to=\"/\">Home</Link></li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"1\">{deck.name}</li>\r\n                        </ol>\r\n                    </nav>\r\n                    <h3>{deck.name}</h3>\r\n                    <p>{deck.description}</p>\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-8\">\r\n                            <Link to={`/decks/${deckId}/edit`} className=\"btn btn-secondary\">Edit</Link> &nbsp;\r\n                            <Link to={`/decks/${deckId}/study`} className=\"btn btn-primary\">Study</Link> &nbsp;\r\n                            <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">Add Cards</Link>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <button onClick={handleDeckDelete} className=\"btn btn-danger\">Delete</button>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <h2>No Cards, Please add some.</h2>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Deck;","import React from \"react\";\r\n\r\nconst DeckForm = ({formData, handleChange}) => {\r\n\r\nreturn (\r\n    <div>\r\n        <label>\r\n            Name:\r\n        </label> <br />\r\n            <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            value={formData.name}\r\n            style={{ width: \"100%\" }}\r\n            />\r\n        <br />\r\n        <br />\r\n        <label>\r\n            Description:\r\n        </label> <br />\r\n            <textarea\r\n            id=\"description\"\r\n            type=\"textarea\"\r\n            name=\"description\"\r\n            rows=\"3\"\r\n            onChange={handleChange}\r\n            value={formData.description}\r\n            style={{ width: \"100%\" }}\r\n            />\r\n        <br />\r\n    </div>\r\n    )\r\n};\r\nexport default DeckForm;","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport DeckForm from \"./DeckForm\"\r\nimport {createDeck} from \"../../utils/api/index\"\r\n\r\n\r\nfunction CreateDeck(){\r\n    const initialFormState = {\r\n        name: \"\",\r\n        description: \"\",\r\n      };\r\n      const [formData, setFormData] = useState({ ...initialFormState });\r\n      const handleChange = ({ target }) => {\r\n        const value = target.value;\r\n       setFormData({\r\n       ...formData,\r\n       [target.name]: value,\r\n     });\r\n    };\r\n    const history = useHistory();\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        //console.log(\"Submitted:\", formData);\r\n        async function updateData() {\r\n           try {\r\n            const output = await createDeck(formData)\r\n            history.push(`/decks/${output.id}`);\r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      updateData();   \r\n      };\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\" key=\"0\"><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"1\">Create Deck</li>\r\n                </ol>\r\n            </nav>\r\n            <br />\r\n            <h2>Create Deck</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <DeckForm formData={formData} handleChange={handleChange} />\r\n                <Link to=\"/\" className=\"btn btn-secondary\">Cancel</Link> &nbsp;\r\n                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default CreateDeck;","import React, {useState, useEffect} from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport DeckForm from \"./DeckForm\"\r\nimport {readDeck, updateDeck} from \"../../utils/api/index\"\r\n\r\nfunction DeckEdit(){\r\n  const initialFormState = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n    const params = useParams();\r\n    const deckId = params.deckId\r\n    const [deck, setDeck] = useState({ ...initialFormState });\r\n    useEffect(() => {\r\n        async function loadData() {\r\n           try {\r\n           const dataFromAPI = await readDeck(deckId);\r\n           setDeck(dataFromAPI);           \r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      loadData();\r\n    }, [deckId]);\r\n\r\n\r\n    const handleChange = ({ target }) => {\r\n        const value = target.value;\r\n       setDeck({\r\n       ...deck,\r\n       [target.name]: value,\r\n     });\r\n    };\r\n    const history = useHistory();\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        //console.log(\"Submitted:\", deck);\r\n        async function updateData() {\r\n           try {\r\n            await updateDeck(deck);\r\n            history.push(`/decks/${deckId}`);\r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      updateData();    \r\n      };\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\" key=\"0\"><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"breadcrumb-item\" key=\"1\"><Link to={`/decks/${deckId}`}>Deck Name</Link></li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"2\">Edit Deck</li>\r\n                </ol>\r\n            </nav>\r\n            <br />\r\n            \r\n            <h2>Edit Deck</h2>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n                <DeckForm formData={deck} handleChange={handleChange} />\r\n                <Link to={`/decks/${deckId}`} className=\"btn btn-secondary\">Cancel</Link> &nbsp;\r\n                <button type=\"submit\" value=\"submit\" className=\"btn btn-primary\">Save</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default DeckEdit;","import React from \"react\";\r\n\r\nconst CardForm = ({formData, handleChange}) => {\r\n\r\nreturn (\r\n    <div>\r\n        <label>\r\n            Front:\r\n        </label> <br />\r\n            <textarea\r\n            id=\"front\"\r\n            type=\"text\"\r\n            name=\"front\"\r\n            rows=\"3\"\r\n            onChange={handleChange}\r\n            value={formData.front}\r\n            style={{ width: \"100%\" }}\r\n            />\r\n        <br />\r\n        <br />\r\n        <label>\r\n            Back:\r\n        </label> <br />\r\n            <textarea\r\n            id=\"back\"\r\n            type=\"textarea\"\r\n            name=\"back\"\r\n            rows=\"3\"\r\n            onChange={handleChange}\r\n            value={formData.back}\r\n            style={{ width: \"100%\" }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default CardForm;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CardForm from \"./CardForm\";\r\nimport {readDeck, createCard} from \"../../utils/api/index\"\r\n\r\n\r\n\r\nfunction CardCreate(){\r\n    const params = useParams();\r\n    const [deck, setDeck] = useState([]);\r\n    const deckId = params.deckId\r\n    const initialFormState = {\r\n        front: \"\",\r\n        back: \"\",\r\n        deckId\r\n      };\r\n      const [formData, setFormData] = useState({ ...initialFormState });\r\n      const handleChange = ({ target }) => {\r\n        const value = target.value;\r\n       setFormData({\r\n       ...formData,\r\n       [target.name]: value,\r\n     });\r\n    };\r\n    useEffect(() => {\r\n        async function loadData() {\r\n           try {\r\n              const dataFromAPI = await readDeck(deckId);\r\n              setDeck(dataFromAPI);           \r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      loadData();\r\n    }, [deckId]);\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Submitted:\", formData);\r\n        async function updateData() {\r\n           try {\r\n            await createCard(deckId, formData);\r\n            setFormData(initialFormState);\r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      updateData();\r\n      };\r\n\r\n      if(deck){\r\n        return (\r\n            <div>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\" key=\"0\"><Link to=\"/\">Home</Link></li>\r\n                        <li className=\"breadcrumb-item\" key=\"1\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"2\">Add Card</li>\r\n                    </ol>\r\n                </nav>\r\n                <br />\r\n                <h2>{deck.name}: Add Card</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <CardForm formData={formData} handleChange={handleChange} />\r\n                    <Link to={`/decks/${deckId}`} className=\"btn btn-secondary\">Done</Link> &nbsp;\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }else {\r\n        return \"Loading...\"\r\n    }\r\n}\r\nexport default CardCreate;","import React, {useState, useEffect} from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport CardForm from \"./CardForm\"\r\nimport {readDeck, readCard, updateCard} from \"../../utils/api/index\"\r\n\r\nfunction CardEdit(){\r\n    const params = useParams();\r\n    const deckId = params.deckId;\r\n    const cardId = params.cardId;\r\n    const [deck, setDeck] = useState({});\r\n    const [card, setCard] = useState({});\r\n    useEffect(() => {\r\n        setDeck( {} );\r\n        async function loadData() {\r\n           try {\r\n           const dataFromAPI = await readDeck(deckId);\r\n           setDeck(dataFromAPI);\r\n           const datafromApie2 = await readCard(cardId);\r\n           setCard(datafromApie2);              \r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      loadData();\r\n    }, [deckId, cardId]);\r\n\r\n\r\n    const handleChange = ({ target }) => {\r\n        const value = target.value;\r\n       setCard({\r\n       ...card,\r\n       [target.name]: value,\r\n     });\r\n    };\r\n    const history = useHistory();\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Submitted:\", card);\r\n        async function updateData() {\r\n           try {\r\n               // eslint-disable-next-line \r\n           const dataFromAPI = await updateCard(card);\r\n\r\n           history.push(`/decks/${deckId}`);\r\n          } catch (error) {\r\n            if (error.name === \"AbortError\") {\r\n              // Ignore `AbortError`\r\n              console.log(\"Aborted\");\r\n          } else {\r\n              throw error;\r\n          }\r\n        }\r\n      }\r\n      updateData(); \r\n      };\r\n    return (\r\n        <div>\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\" key=\"0\"><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"breadcrumb-item\" key=\"1\"><Link to={`/decks/${deckId}`}>{deck.name}</Link></li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"2\">Edit Card {cardId}</li>\r\n                </ol>\r\n            </nav>\r\n            <br />\r\n            \r\n            <h2>Edit Card</h2>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n                <CardForm formData={card} handleChange={handleChange} />\r\n                <Link to={`/decks/${deckId}`} className=\"btn btn-secondary\">Cancel</Link> &nbsp;\r\n                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default CardEdit;","import React from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport Study from \"./Study\";\nimport Deck from \"./Deck/Deck\"\nimport CreateDeck from \"./Deck/CreateDeck\"\nimport EditDeck from \"./Deck/EditDeck\";\nimport CardCreate from \"./CardFiles/CardCreate\";\nimport CardEdit from \"./CardFiles/CardEdit\";\nimport { BrowserRouter as Route, Switch } from \"react-router-dom\";\n\n\nfunction Layout() {\n  \n  return (\n    <div>\n      \n      <Header />\n      <div className=\"container\">\n      <Switch>\n        <Route exact={true} path=\"/\">\n          <Home />\n        </Route>\n        <Route path={'/decks/:deckId/study'}>\n          <Study />\n        </Route>\n        <Route path={'/decks/new'}>\n          <CreateDeck />\n        </Route>\n        <Route path={'/decks/:deckId/cards/:cardId/edit'}>\n          <CardEdit />\n        </Route>\n        <Route path={'/decks/:deckId/cards/new'}>\n          <CardCreate />\n        </Route>\n        <Route path={'/decks/:deckId/edit'}>\n          <EditDeck />\n        </Route>\n        <Route path={'/decks/:deckId'}>\n          <Deck />\n        </Route>\n        \n \n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>      \n      </div>\n    </div>\n  );\n}\n\nexport default Layout;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}